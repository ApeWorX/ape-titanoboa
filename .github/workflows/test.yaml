on: ["push", "pull_request"]

name: Test

jobs:
    linting:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4

        - name: Setup Python
          uses: actions/setup-python@v5
          with:
              python-version: "3.10"

        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install .[lint]

        - name: Run Black
          run: black --check .

        - name: Run flake8
          run: flake8 .

        - name: Run isort
          run: isort --check-only .

    type-check:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4

        - name: Setup Python
          uses: actions/setup-python@v5
          with:
              python-version: "3.10"

        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install .[lint,test]

        - name: Run MyPy
          run: mypy .

    functional:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                # TODO: Can add macos-latest once https://github.com/ApeWorX/github-action/pull/37
                #   is released.
                os: [ubuntu-latest]   # eventually add `windows-latest`
                python-version: ["3.10", "3.11", "3.12", "3.13"]

        steps:
        - uses: actions/checkout@v4

        - name: Setup Python
          uses: actions/setup-python@v5
          with:
              python-version: ${{ matrix.python-version }}

        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install .[test]

        - name: Ape Set-up
          uses: ApeWorX/github-action@fix/mkdir-fail
          with:
            python-version: ${{ matrix.python-version }}

        - name: Run Tests
          run: ape test
          env:
            WEB3_ALCHEMY_API_KEY: ${{ secrets.WEB3_ALCHEMY_API_KEY }}
            ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

# NOTE: uncomment this block after you've marked tests with @pytest.mark.fuzzing
#    fuzzing:
#        runs-on: ubuntu-latest
#
#        strategy:
#            fail-fast: true
#
#        steps:
#        - uses: actions/checkout@v4
#
#        - name: Setup Python
#          uses: actions/setup-python@v5
#          with:
#              python-version: "3.10"
#
#        - name: Install Dependencies
#          run: pip install .[test]
#
#        - name: Run Tests
#          run: pytest -m "fuzzing" --no-cov -s
